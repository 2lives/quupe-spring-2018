enum CategoryEnum {
  CAMERA
  CAMPING
  DRONE
  OUTDOOR
  ELECTRONICS
  GARDENING
  SPORTS
}

type Item @model {
  id: ID! @isUnique
  title: String!
  image: String!
  condition: String!
  year: String!
  description: String! @migrationValue(value: String)
  originalPrice: String! @migrationValue(value: String)
  category: String! @migrationValue(value: CategoryEnum)
  price: String!
  priceOneWeek: String! @migrationValue(value: String)
  priceOneMonth: String! @migrationValue(value: String)
  latitude: Float! @migrationValue(value: "0")
  longitude: Float! @migrationValue(value: "0")
  allBorrowers: [BorrowTransactions!]! @relation(name: "TransactionsOnItem")
  owner: User @relation(name: "ItemsOnUser")
}

type User @model {
  id: ID! @isUnique
  items: [Item!]! @relation(name: "ItemsOnUser")
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String! @isUnique
  password: String!
  fullname: String
  profileimage: String
  bio: String
  allBorrowed: [BorrowTransactions!]! @relation(name: "TransactionsOnUser")
  rooms: [Room!]! @relation(name: "UserOnRoom")
  messages: [Messages!]! @relation(name: "MessagesOnUser")
}

type BorrowTransactions @model {
     id: ID! @isUnique
     startDate: String!
     endDate: String!
     item: [Item!]! @relation(name: "TransactionsOnItem")
     user: [User!]! @relation(name: "TransactionsOnUser")
}

type Room @model {
  id: ID! @isUnique
  messages: [Messages!]! @relation(name: "MessagesOnRoom")
  people: [User!]! @relation(name: "UserOnRoom")
}

type Messages @model {
     id: ID! @isUnique
     text: String!
     roomid: Room! @relation(name: "MessagesOnRoom")
     sentBy: [User!]! @relation(name: "MessagesOnUser")
     createdAt: DateTime!
}

type File @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  contentType: String
  name: String
  secret: String @isUnique
  size: Int
  url: String
}
